@using Business_Logic
@model studentViewModel

@{
    ViewBag.Title = "create";
}

<h2>@DictExpressionBuilderSystem.Translate("general.RegisterStudentForm")</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <hr />

    <div class="form-control-static">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (@ViewBag.message != null)
        { <div>
            <strong style="color:red"> @ViewBag.message</strong>
        </div>}
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4></h4>
                </div>
                <div class="panel-body">

                    <div class="form-group">
                        @Html.LabelFor(x => x.EditableTblStudents.CellPhone)
                        @Html.EditorFor(x => x.EditableTblStudents.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditableTblStudents.CellPhone, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="form-group">
                            @Html.LabelFor(x => x.EditableTblStudents.GetAlertByCell)
                            @Html.CheckBoxFor(model => model.GetAlertByCell)
                        </div>*@
                    <div class="form-group">
                        @Html.LabelFor(x => x.EditableTblStudents.Email)
                        @Html.EditorFor(x => x.EditableTblStudents.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditableTblStudents.Email, "", new { @class = "text-danger" })

                        @*<div class="form-group">
                                @Html.LabelFor(x => x.EditableTblStudents.GetAlertByEmail)
                                @Html.CheckBoxFor(model => model.GetAlertByEmail)
                            </div>*@
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.EditableTblStudents.subsidy)
                        @Html.CheckBoxFor(model => model.subsidyStatus)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.EditableTblStudents.siblingAtSchool)
                        @Html.CheckBoxFor(model => model.siblingAtSchool)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.EditableTblStudents.specialRequest)
                        @Html.CheckBoxFor(model => model.specialRequest)
                    </div>
                    <div class="form-group divHide">
                        @Html.LabelFor(model => model.EditableTblStudents.request)
                        @Html.TextAreaFor(model => model.EditableTblStudents.request, new { @type = "string" })
                    </div>
                    <div class="panel panel-success">
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="editor-field" style="margin-top:6px;margin-bottom:3px;">
                                    @Html.LabelFor(x => x.EditableTblStudents.CellConfirm)
                                    @{if (Model.CellConfirm == null)
                                    {<img src="~/Content/img/false.png" alt="NO">
                                        <button type="button" class=" btn btn-primary btn-sm">@DictExpressionBuilderSystem.Translate("general.confirm")</button>}
                                    else if ((bool)Model.CellConfirm)
                                    {<img src="~/Content/img/true.png" alt="YES"> }
                                    else
                                    {<img src="~/Content/img/false.png" alt="NO">
                                        <button type="button" class=" btn btn-primary btn-sm">@DictExpressionBuilderSystem.Translate("general.confirm")</button>}
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-success" style="border:3px solid  red">
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="editor-field" style="margin-top:6px;margin-bottom:3px;">
                                    @Html.LabelFor(x => x.EditableTblStudents.paymentStatus)
                                    @{if (Model.CellConfirm == null)
                                    {<img src="~/Content/img/false.png" alt="NO">
                                        <button type="button" class=" btn btn-primary btn-sm">@DictExpressionBuilderSystem.Translate("general.GoToPayment")</button>}
                                    else if ((bool)Model.paymentStatus)
                                    {<img src="~/Content/img/true.png" alt="YES"> }
                                    else
                                    {<img src="~/Content/img/false.png" alt="NO">
                                        <button type="button" class=" btn btn-primary btn-sm">@DictExpressionBuilderSystem.Translate("general.GoToPayment")</button>}
                                    }
                                </div>

                                <p>@DictExpressionBuilderSystem.Translate("coment.1") </p>



                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>@DictExpressionBuilderSystem.Translate("general.studetData")</h4>
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EditableTblStudents.studentId)
                        @Html.EditorFor(model => model.EditableTblStudents.studentId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditableTblStudents.studentId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.EditableTblStudents.lastName)
                        @Html.EditorFor(x => x.EditableTblStudents.lastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditableTblStudents.lastName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.EditableTblStudents.firstName)
                        @Html.EditorFor(x => x.EditableTblStudents.firstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EditableTblStudents.firstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EditableTblStudents.city)
                        @Html.HiddenFor(model => model.EditableTblStudents.city)
                        <text>תל אביב</text>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EditableTblStudents.street)
                        @Html.HiddenFor(model => model.EditableTblStudents.street)
                        @Html.ValidationMessageFor(model => model.EditableTblStudents.street, "", new { @class = "text-danger" })
                        @if (@Model.EditableTblStudents.street == null)
                        {<input id="autocomplete" list="streets" placeholder="@DictExpressionBuilderSystem.Translate("general.insertStreetName")">}
                        else
                        {<input id="autocomplete" list="streets" placeholder=@Model.EditableTblStudents.street>}
                        <datalist id="streets"></datalist>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EditableTblStudents.houseNumber)
                        @Html.TextBoxFor(model => model.EditableTblStudents.houseNumber, new { @type = "string" })
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.EditableTblStudents.Shicva)
                            @Html.EditorFor(model => model.EditableTblStudents.Shicva, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EditableTblStudents.Shicva, "", new { @class = "text-danger" })
                        </div>*@
                    <div class="form-group">
                        @for (int i = 0; i < Model.clas.Count; i++)
                        {
                            @Html.HiddenFor(x => x.clas[i])
                        }
                        @Html.LabelFor(model => model.EditableTblStudents.@class)
                        @Html.DropDownListFor(x => Model.EditableTblStudents.@class, new SelectList(Model.clas, "class"), "")
                        @Html.ValidationMessageFor(model => model.EditableTblStudents.@class, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <input type="submit" value="@DictExpressionBuilderSystem.Translate("general.save")" class="btn btn-success" />



    </div>
}






<style>
    .form-control {
        display: inline !important;
    }

    .form-group {
        margin-bottom: 7px !important;
    }

    .loadinggif {
        background: url('http://www.hsi.com.hk/HSI-Net/pages/images/en/share/ajax-loader.gif') no-repeat right center;
    }
</style>


<script>


    $('#autocomplete').on("keyup", function (event) {
        var street = ($(this).val());
        if (street.length <= 2) {
            $("#streets").empty();
        }
        if (street.length > 2) {
            var url = '/Street/getStreetList/' + street;
            //$('#autocomplete').addClass('loadinggif');
            $.ajax({
                url: url,
                type: 'POST',
                cache: false,
                success: function (result) {
                    $("#streets").hide();
                    if (result != null) {
                        var data = [];
                        $.each(jQuery.parseJSON(result), function (event) {
                            //data.push($("<option>  </option>").val(this['streetId']).text(this['streetName']));
                            data.push($("<option>  </option>").html(this['streetName']).val(this['streetName']));

                        })
                        //$('#autocomplete').removeClass('loadinggif');
                        $("#streets").empty().append(data);
                        //  $("#streets").show();
                    }
                },
                error: function () {
                    //$('#autocomplete').removeClass('loadinggif');
                    alert("failure");
                }
            });
        }
    });

    //$('#autocomplete').onkeypress(function s() {
    //    alert("ok");
    //    var $valueTofound = $(this).val();
    //    alert($valueTofound);
    //    $.ajax({
    //        type: "POST",
    //        url: "Your URL",
    //        data: Json.stringify({valueTofound : $valueTofound }), //You will pass data to code behind
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        success: function (data) {
    //            $.each(jQuery.parseJSON(data.d), function () {
    //                $("#ddlRecords").append($("<option>  </option>").val(this['ID']).html(this['Name'])); //fill the dropdown
    //            });
    //        },
    //        error: function (msg) {
    //            //error
    //        }
    //    });
    //});

    $("#autocomplete").blur(function () {
        var street = $(this).val();
        $('#EditableTblStudents_street').val(street);
    })



    $("#specialRequest").change(function () {
        specialRequest();
    });

    function specialRequest() {
        var isChecked = $('#specialRequest').prop("checked");
        var divHide = document.querySelector('.divHide');
        // alert(isChecked);
        if (!isChecked) {
            divHide.style.visibility = 'hidden';

        } else {
            divHide.style.visibility = 'visible';
        }
    }
    specialRequest();
</script>