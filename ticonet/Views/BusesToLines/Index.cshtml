@using System.Web.Optimization
@using Business_Logic.Enums
@using DEBS = Business_Logic.DictExpressionBuilderSystem

<div class="content jqgrid-extended" id="dBusesToLinesTable">
    <table id="grBusesToLines"></table>
    <div id="pgBusesToLines"></div>
</div>

<!--Div for render grid for Print-->
<div hidden id="printBusesToLinesGrid"><table id="grPrintBusesToLines"></table></div>

@section scripts{
    @Scripts.Render("~/bundles/jqGridExtend")
    <script>
        $(function () {
            var lineActionsFormatter = function (cellvalue, options, rowObject) {
                var res = "";
                res += '<div style="margin-left: 8px;">';
                res += '    <div title="@DEBS.Translate("grid.EditSelectedRow")" style="float: left; cursor: pointer;" class="ui-pg-div ui-inline-edit" id="jEditButton_' + options.rowId + '" onclick="$.fn.rowActionsExtended.call(this, \'edit\');" onmouseover="jQuery(this).addClass(\'ui-state-hover\');" onmouseout="jQuery(this).removeClass(\'ui-state-hover\');"><span class="glyphicon glyphicon-pencil"></span></div>';
                //res += '    <div title="@DEBS.Translate("grid.DeleteSelectedRow")" style="float: left;" class="ui-pg-div ui-inline-del" id="jDeleteButton_' + options.rowId + '" onclick="$.fn.rowActionsExtended.call(this, \'del\');" onmouseover="jQuery(this).addClass(\'ui-state-hover\');" onmouseout="jQuery(this).removeClass(\'ui-state-hover\');"><span class="glyphicon glyphicon-trash"></span></div>';
                res += '    <div title="@DEBS.Translate("grid.SaveRow")" style="float: left; display: none" class="ui-pg-div ui-inline-save" id="jSaveButton_' + options.rowId + '" onclick="$.fn.rowActionsExtended.call(this, \'save\');" onmouseover="jQuery(this).addClass(\'ui-state-hover\');" onmouseout="jQuery(this).removeClass(\'ui-state-hover\');"><span class="glyphicon glyphicon-floppy-disk"></span></div>';
                res += '    <div title="@DEBS.Translate("grid.CancelRowEditing")" style="float: left; display: none;" class="ui-pg-div ui-inline-cancel" id="jCancelButton_' + options.rowId + '" onclick="$.fn.rowActionsExtended.call(this, \'cancel\');" onmouseover="jQuery(this).addClass(\'ui-state-hover\');" onmouseout="jQuery(this).removeClass(\'ui-state-hover\');"><span class="glyphicon glyphicon-ban-circle"></span></div>';
                res += '</div>';
                return res;
            };

            var printWindow = null;
            var grid = $("#grBusesToLines");
            var gridExtend = new jqGridExtend(grid);
            var pagerID = "#pgBusesToLines";

            grid.jqGrid({
                caption: "@DEBS.Translate("BusToLine.GridCaption")",
                url: '/api' + '@Url.Action("GetLines", "BusesToLinesApi")',
                datatype: "json",
                loadonce: false,
                reloadAfterSubmit: true,
                height: "100%",
                autowidth: true,
                regional: "il",
                hidegrid: false,
                multiselect: false,
                pager: pagerID,
                mtype: "get",
                rowNum: 20,
                rowList: [10, 20, 30, 40, 50],
                viewrecords: true,
                ignoreCase: true,
                loadui: "disable",
                altRows: false,
                sortable: true,
                altclass: "ui-state-default",
                editurl: '/api' + '@Url.Action("EditLine", "BusesToLinesApi")',
                sortname: 'LineName',
                sortorder: "asc",
                footerrow: true,
                colNames: [
                    '@DEBS.Translate("Line.Id")',
                    '@DEBS.Translate("Line.LineName")',
                    '@DEBS.Translate("Line.LineNumber")',
                    '@DEBS.Translate("Line.Direction")',
                    '@DEBS.Translate("Line.IsActive")',
                    '@DEBS.Translate("Line.totalStudents")',
                    '@DEBS.Translate("Line.Duration")',
                    '@DEBS.Translate("Bus.BusDescription")',
                    '@DEBS.Translate("Bus.Id")',
                    '@DEBS.Translate("Bus.BusId")',
                    '@DEBS.Translate("Bus.PlateNumber")',
                    '@DEBS.Translate("BusCompany.Name")',
                    '@DEBS.Translate("Bus.seats")',
                    '@DEBS.Translate("Bus.price")',
                    ""
                ],
                colModel: [
                    { name: "Id", index: 'Id', key: true, hidden: true, sortable: false, editable: false, edittype: "text", search: false },
                    { name: 'LineName', index: 'LineName', sorttype: "text", width: 110, editable: false },
                    { name: 'LineNumber', index: 'LineNumber', sorttype: "text", width: 110, editable: false },
                    {
                        name: 'Direction',
                        index: 'Direction',
                        sorttype: "select",
                        width: 110,
                        editable: false,
                        search: false,
                        edittype: 'select',
                        formatter: 'select',
                        editoptions: {
                            value: {
                                '@((int)LineDirection.Bouth)': '@DEBS.Translate("General.Bouth")',
                                '@((int)LineDirection.To)': '@DEBS.Translate("General.To")',
                                '@((int)LineDirection.From)': '@DEBS.Translate("General.From")'
                            }
                        }
                    },
                    { name: 'IsActive', index: 'IsActive', sorttype: "text", width: 90, editable: false, edittype: "checkbox", editoptions: { value: "True:False" }, align: 'center', formatter: 'checkbox', search: false },
                    { name: 'totalStudents', index: 'totalStudents', sorttype: "text", width: 110, editable: false },
                    { name: 'Duration', index: 'Duration', sorttype: "text", width: 110, editable: false, search: false },
                    { name: 'BusDescription', index: 'BusDescription', hidden: true, sortable: false, editable: false, edittype: "text", search: false },
                    {
                        name: 'Bus',
                        index: 'Bus',
                        sorttype: "text",
                        width: 80,
                        editable: true,
                        search: false,
                        edittype: "select",
                        editoptions: {
                            dataUrl: '/api' + '@Url.Action("GetAvailableBuses", "BusesToLinesApi")',
                            dataInit: function (elem) {
                                $(elem).width('94%');  // set the width for dropdown
                            },
                            postData: function (rowid, value, cmName) {
                                return {
                                    lineId: rowid
                                }
                            },
                            buildSelect: function (data) {
                                var response = jQuery.parseJSON(data);
                                var s = '<select>';
                                if (response && response.Data.length) {
                                    for (var i = 0, l = response.Data.length; i < l; i++) {
                                        var ri = response.Data[i];
                                        s += '<option value="' + ri.Value + '" title="' + ri.Title + '">' + ri.Title + '</option>';
                                    }
                                }
                                return s + "</select>";
                            }
                        }
                    },
                    { name: 'BusId', index: 'BusId', sorttype: "text", width: 110, editable: false, search: false },
                    { name: 'PlateNumber', index: 'PlateNumber', sorttype: "text", width: 110, editable: false, search: false },
                    {
                        name: 'BusCompanyName', index: 'BusCompanyName', sorttype: "text", width: 110, editable: false, search: true,
                        stype: "select",
                        searchoptions: {
                            dataUrl: '/api' + '@Url.Action("GetCompaniesFilter", "BusesToLinesApi")',
                            buildSelect: function (data) {
                                var response = jQuery.parseJSON(data);
                                var s = '<select>';
                                if (response && response.Data.length) {
                                    for (var i = 0, l = response.Data.length; i < l; i++) {
                                        var ri = response.Data[i];
                                        s += '<option value="' + ri.Value + '" title="' + ri.Title + '">' + ri.Text + '</option>';
                                    }
                                }
                                return s + "</select>";
                            }
                        }
                    },
                    { name: 'seats', index: 'seats', sorttype: "text", width: 110, editable: false, search: false },
                    { name: 'price', index: 'price', sorttype: "text", width: 110, editable: false, search: false },
                    {
                        name: 'ActionsBtn',
                        index: 'ActionsBtn',
                        width: 80,
                        align: 'center',
                        search: false,
                        formatter: lineActionsFormatter,
                    },
                ],
                saveAfterSelect: true,
                beforeSelectRow: function (rowid) {
                    gridExtend.restore(rowid);
                    return false;
                },
                ondblClickRow: function (rowid, iRow, iCol) {
                    gridExtend.editRow(rowid);
                },
                loadComplete: function (data) {
                    gridExtend.populateDescription(data);

                    var ids = grid.jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var id = ids[i];
                        var totalStudents = parseInt(grid.jqGrid('getCell', id, 'totalStudents'));
                        var seats = parseInt(grid.jqGrid('getCell', id, 'seats'));
                        if (totalStudents > 0 && seats > 0 && totalStudents > seats) {
                            grid.jqGrid('setCell', id, 'totalStudents', '', { 'background-color': '#AA0000' });
                            grid.jqGrid('setCell', id, 'seats', '', { 'background-color': '#AA0000' });
                        }
                    }

                    var postData = grid.jqGrid('getGridParam', 'postData');
                    var urlGetTotal = '/api' + "@Url.Action("GetTotal", "BusesToLinesApi")";
                    var url = urlGetTotal + "?" + $.param(postData);
                    $.ajax({
                        url: url,
                        type: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            grid.footerData('set', { LineName: '@DEBS.Translate("grid.Total")', totalStudents: data.Data.Students, seats: data.Data.Seats, price: data.Data.Price });
                        }
                    });
                }
            })
            .navGrid(pagerID, {
                add: false,
                edit: false,
                del: false,
                refresh: true,
                refreshtitle: "@DEBS.Translate("grid.Reload")",
                search: false,
                view: false,
                closeAfterAdd: true
            }
            )
            .navButtonAdd(pagerID, {
                id: "print",
                buttonicon: "ui-icon-print",
                caption: "",
                title: "@DEBS.Translate("grid.Print")",
                onClickButton: function () {
                    var postData = grid.jqGrid('getGridParam', 'postData');
                    var urlGetExcel = '/api' + "@Url.Action("GetPrint", "BusesToLinesApi")";
                    var url = urlGetExcel + "?" + $.param(postData);
                    var printGrid = $("#grPrintBusesToLines");
                    if (printWindow == null || printWindow.closed) {
                        printWindow = window.open('', '', 'height=' + $(window).height() + ',width=' + $(window).width());
                    } else {
                        printWindow.focus();
                    }
                    $.ajax({
                        url: url,
                        type: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            if (printWindow != undefined) {
                                printGrid.jqGrid({
                                    datatype: "local",
                                    data: data,
                                    height: "auto",
                                    autowidth: true,
                                    footerrow: true,
                                    rowNum: -1,
                                    colNames: [
                                        '@DEBS.Translate("Line.LineName")',
                                        '@DEBS.Translate("Line.LineNumber")',
                                        '@DEBS.Translate("Line.Direction")',
                                        '@DEBS.Translate("Line.IsActive")',
                                        '@DEBS.Translate("Line.totalStudents")',
                                        '@DEBS.Translate("Line.Duration")',
                                        '@DEBS.Translate("Bus.BusIdDescription")',
                                        '@DEBS.Translate("Bus.PlateNumber")',
                                        '@DEBS.Translate("BusCompany.Name")',
                                        '@DEBS.Translate("Bus.seats")',
                                        '@DEBS.Translate("Bus.price")',
                                    ],
                                    colModel: [
                                        { name: "LineName" },
                                        { name: "LineNumber" },
                                        {
                                            name: "Direction", formatter: 'select',
                                            editoptions: {
                                                value: {
                                                    '@((int)LineDirection.Bouth)': '@DEBS.Translate("General.Bouth")',
                                                    '@((int)LineDirection.To)': '@DEBS.Translate("General.To")',
                                                    '@((int)LineDirection.From)': '@DEBS.Translate("General.From")'
                                                }
                                            }
                                        },
                                        { name: "IsActive" },
                                        { name: "totalStudents" },
                                        { name: "Duration" },
                                        { name: "BusIdDescription" },
                                        { name: "PlateNumber" },
                                        { name: "BusCompanyName" },
                                        { name: "seats" },
                                        { name: "price" },
                                    ],
                                    height: "auto",
                                    loadComplete: function () {
                                        var totalStudents = printGrid.jqGrid('getCol', 'totalStudents', false, 'sum'),
                                            seats = printGrid.jqGrid('getCol', 'seats', false, 'sum'),
                                            price = printGrid.jqGrid('getCol', 'price', false, 'sum');
                                        printGrid.jqGrid("footerData", "set", { LineName: '@DEBS.Translate("grid.Total")', totalStudents: totalStudents, seats: seats, price: price });
                                    }
                                });
                                printWindow.document.clear();
                                printWindow.document.write('<html><head><title>@DEBS.Translate("BusToLine.GridCaption")</title>');
                                //printWindow.document.write('<style type=\"text/css\"> table th, table td { border:1px solid #000; padding:0; margin:0; } </style>');
                                printWindow.document.write('</head><body >');
                                printWindow.document.write('<div class="page">');
                                printWindow.document.write('<div class="subpage">');
                                printWindow.document.write($("#printBusesToLinesGrid").html());
                                printWindow.document.write('</div>');
                                printWindow.document.write('</div>');
                                printWindow.document.write('</body></html>');
                                printWindow.document.close();
                                printWindow.print();
                            }
                        }
                    });

                }
            }
            )
            .navButtonAdd(pagerID, {
                id: "toExcel",
                buttonicon: "ui-icon-disk",
                caption: "",
                title: "@DEBS.Translate("grid.ToExcel")",
                onClickButton: function () {
                    var postData = grid.jqGrid('getGridParam', 'postData');
                    var urlGetExcel = '/api' + "@Url.Action("GetExcel", "BusesToLinesApi")";
                    var url = urlGetExcel + "?" + $.param(postData);
                    window.location.href = url;
                }
            }
            )
            .filterToolbar({
                stringResult: true,
                enableClear: false
            }
            );

            gridExtend.init();

        });
    </script>
}